[project]
name = "metalloprotein-binding-efficiency"
version = "1.0.0"
description = "Metalloprotein Binding Efficiency Prediction Pipeline with GROMACS Integration"
authors = [
    {name = "Matthew Ng", email = "matthew.ng@example.com"}
]
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = ["metalloprotein", "binding", "efficiency", "gromacs", "molecular-dynamics"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
]

dependencies = [
    # Core scientific computing
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "matplotlib>=3.5.0",
    "pandas>=1.3.0",
    
    # PDB processing and structural biology
    "biopython>=1.79",
    "mdtraj>=1.9.7",
    
    # Machine learning and clustering
    "scikit-learn>=1.0.0",
    
    # Configuration and data handling
    "pyyaml>=6.0",
    "h5py>=3.7.0",
    
    # Visualization
    "seaborn>=0.11.0",
    "plotly>=5.0.0",
    
    # Advanced scientific computing
    "numba>=0.56.0",
    "numba-scipy>=0.3.0",
    
    # Parallel computing
    "multiprocessing-logging>=0.3.0",
    
    # Database and web requests
    "requests>=2.28.0",
    "urllib3>=1.26.0",
    
    # Enhanced Pipeline Dependencies
    # Markov Chain and sequence analysis
    "regex>=2022.0.0",
    
    # Enhanced structural analysis
    "networkx>=2.8.0",
    "python-louvain>=0.15",
    
    # GROMACS integration (optional - may need system GROMACS installation)
    # "gmxapi>=0.4.0",  # Uncomment if GROMACS is installed on system
    # "gromacs>=2022.0",  # Uncomment if GROMACS is installed on system
    
    # Development and testing
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    
    # Jupyter for interactive analysis
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=1.0.0",
]

gpu = [
    "cupy-cuda11x>=11.0.0",
    "mpi4py>=3.1.0",
]

advanced = [
    "torch>=1.12.0",
    "torch-geometric>=2.1.0",
    "transformers>=4.20.0",
    "pymol-open-source>=2.5.0",
    "vtk>=9.1.0",
]

[project.scripts]
metalloprotein-demo = "src.basic.main:main"
metalloprotein-enhanced = "src.enhanced.enhanced_main:main"

[project.urls]
Homepage = "https://github.com/yourusername/metalloprotein-binding-efficiency"
Documentation = "https://metalloprotein-binding-efficiency.readthedocs.io/"
Repository = "https://github.com/yourusername/metalloprotein-binding-efficiency"
Issues = "https://github.com/yourusername/metalloprotein-binding-efficiency/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --cov=src --cov-report=html --cov-report=term-missing" 